#!/usr/bin/env bash

set -euxo

error_exit() {
    echo "$1" >&2
    usage
    exit 1
}

usage() {
    echo "usage: $0 /path/to/build_dir" >&2
}

SCRIPT_DIR="$(
    cd "$(dirname "$0")"
    pwd
)"
ORIG="$SCRIPT_DIR/test/orig"
OBJDIR="$SCRIPT_DIR/obj"

if [ "$#" -ne 1 ]; then
    error_exit "this script allows one argument only"
elif [ ! -d "$1" ]; then
    error_exit "$1 is not a existing file"
fi

BINDIR="$(readlink -f "$1")"
for BIN in "$BINDIR"/test_*; do
    if [ -d "$BIN" ]; then
        # skip if BIN is directory e.g. test_a.p
        continue
    elif [ ! -x "$BIN" ]; then
        echo "$BIN is not executable or permitted to execute"
        exit 1 # treated as test failed
    fi
    binbase="$(basename "$BIN")"
    suffix="${binbase#test_}"
    if [[ "$binbase" == *_nomodel ]]; then
        # No model test
        result_name=${binbase#test_}
        result_name=${result_name%_nomodel}
        result_name="${result_name}.tga"
        $BIN
        compare "$SCRIPT_DIR/$result_name" "$ORIG/$result_name" /dev/null
    else
        for f in $(find $OBJDIR -type f); do
            obj_name="$(basename $f)"
            if [[ "$obj_name" != *.obj ]]; then
                continue
            fi
            result_name="${suffix}_${obj_name%.obj}.tga"
            $BIN "$f"
            compare "$SCRIPT_DIR/$result_name" "$ORIG/$result_name" /dev/null
        done
    fi
done
